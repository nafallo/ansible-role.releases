---
- name: Enumerate release files in root directory
  find:
    paths: "{{ releases_path }}"
    patterns: "{{ lookup('fileglob', files_pattern | strftime, wantlist=true) | map('regex_replace', '^.*\\.([\\w]+)$', '*.\\1') | list | unique | join(',') }}"
    excludes: "{{ releases_pattern | strftime | basename }}"
    file_type: link
  register: releases_release_find

- name: Ensure symlinks exist for current releases
  file:
    src: "{{ '.pool/' + releases_release_symlink }}"
    dest: "{{ releases_path + '/' + releases_release_symlink }}"
    owner: "{{ ansible_user }}"
    group: www-data
    mode: 0644
    state: link
  loop: "{{ lookup('fileglob', releases_pattern | strftime, wantlist=true) }}"
  loop_control:
    loop_var: releases_release_symlink

- name: Ensure checksum files has correct content
  copy:
    content: >-
      {{ lookup('pipe', 'grep ' + files_pattern | strftime | basename | splitext | first | regex_replace('\\*', '.*') +
      ' ' + releases_path + '.pool/' + releases_release_csum) + '\n' }}
    dest: "{{ releases_path + releases_release_csum }}"
    owner: "{{ ansible_user }}"
    group: www-data
    mode: 0644
  loop:
    - MD5SUMS
    - SHA1SUMS
    - SHA256SUMS
  loop_control:
    loop_var: releases_release_csum

- name: Ensure no symlinks for previous releases
  file:
    path: "{{ releases_release_rmfile }}"
    state: absent
  loop: "{{ releases_release_find.files | map(attribute='path') | list }}"
  loop_control:
    loop_var: releases_release_rmfile
