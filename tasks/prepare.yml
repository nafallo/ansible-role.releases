---
- name: Ensure created staging area
  file:
    path: "{{ releases_path + '/.pool' }}"
    owner: "{{ releases_owner }}"
    group: "{{ releases_group }}"
    mode: 0755
    state: directory

- name: Ensure files exist in staging area
  copy:
    src: "{{ item }}"
    dest: "{{ releases_path + '/.pool/' }}"
    owner: "{{ releases_owner }}"
    group: "{{ releases_group }}"
    mode: 0644
  loop: "{{ query('fileglob', releases_pattern) }}"
  loop_control:
    label: "{{ item | basename }}"
  register: releases_prepare_upload

- name: Ensure checksums exist in staging area
  lineinfile:
    path: "{{ releases_path + '/.pool/' + item.1 | upper + 'SUMS' }}"
    regexp: " *{{ item.0.dest | basename }}$"
    line: >-
      {%- if item[0][item.1] is not none -%}
      {{ item[0][item.1] + ' *' + item.0.dest | basename }}
      {%- else -%}
      {{ lookup('pipe', item.1 + 'sum -b ' + item.0.dest) |
      regex_findall('([a-z0-9]{32,64})') | first + ' *' + item.0.dest | basename }}
      {%- endif -%}
    owner: "{{ releases_owner }}"
    group: "{{ releases_group }}"
    mode: 0644
    create: true
  loop: >-
    {{ releases_prepare_upload.results | to_json | from_json |
    json_query('[?ends_with(dest, `iso`)].{dest: item, md5: md5sum, sha1: checksum, sha256: sha256sum}')
    | product(['md5', 'sha1', 'sha256']) | list }}
  loop_control:
    label: "{{ item.1 | upper + ': ' + item.0.dest | basename }}"
  when: not ansible_check_mode
